@page "/"
@using System.Security.Claims
@using Lib
@using XuMath
@using Microsoft.AspNetCore.Components.Authorization
@using System.Diagnostics
@using cSharpAuth.Data
@using cSharpAuth.Services
@inject UserLinkService UserLinkService
@inject AuthenticationStateProvider AuthenticationStateProvider


<AuthorizeView>
    <Authorized>
        <h2>Hello, @context.User.Identity.Name!</h2>
        <p>You can only see this content if you're authorized.</p>
        <button class="btn btn-primary" @onclick="SecureMethod">Authorized Only Button</button>
    </Authorized>
    <NotAuthorized>
        <h2>Authentication Failure!</h2>
        <p>You're not signed in.</p>
        <div class="jumbotron mt-3">
            <h1>Links</h1>
            <ul>
                @if (userlinks == null)
                {
                    <li>loading...</li>
                }
                else
                {
                    @foreach (var link in userlinks)
                    {
                        <li><a target="@link.Target" href="@link.Href">@link.Content</a></li>
                    }
                }
            </ul>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    
    private IEnumerable<UserLink> userlinks;

    protected override async Task OnInitializedAsync()
    {
        userlinks = await UserLinkService.GetUserLinksAsync("http");
    }

    private void SecureMethod()
    {

    }
}
