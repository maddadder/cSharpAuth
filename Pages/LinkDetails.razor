@page "/link/details/{userLinkId}"
@using Lib
@using cSharpAuth.Services
@inject UserLinkService UserLinkService
@inject NavigationManager NavigationManager
<h2>@link.Content</h2>
<table class="table">
    <tr>
        <td>
            @{
                if(!string.IsNullOrEmpty(link.ImgHref))
                {
                    <a target="@link.Target" href="@link.Href"><img src="@link.ImgHref" width="100%"/></a>
                }
                else if(!string.IsNullOrEmpty(link.ImgContentBase64))
                {
                    <a target="@link.Target" href="@link.Href"><img src="@link.ImgContentBase64" width="100%"/></a>
                }
                else if(!string.IsNullOrEmpty(link.Category))
                {
                    <a target="@link.Target" href="@link.Href">@link.Category</a>
                }
            }
            <br/><span>Created @link.Created.ToString("MM/dd/yy hh:mm:ss")</span>
            <br/><span>Modified @link.Modified.ToString("MM/dd/yy hh:mm:ss")</span>
            <table class="table">
                <tr>
                    <td>
                        <span style="cursor:pointer;" @onclick="Cancel" class="btn btn-outline-dark" role="button">
                            Back
                        </span>
                    </td>
                    <td>
                        <a href='/link/edit/@link.Pid' class="btn btn-outline-dark" role="button">
                            Edit
                        </a>
                    </td>
                    <td>
                        <a href='/link/delete/@link.Pid' class="btn btn-outline-danger" role="button">
                            Delete
                        </a>
                    </td>
                </tr>
            </table>
        </td>
    </tr>
</table>
@code {
    [Parameter]
    public string userLinkId { get; set; }
    UserLinkOverride link = new UserLinkOverride();
    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(userLinkId))
        {
            var row = await UserLinkService.Get(userLinkId);
            link = new UserLinkOverride(){
                __T = row.__T,
                Category = row.Category,
                Content = row.Content,
                Created = row.Created,
                Href = row.Href,
                ImgContent = row.ImgContent,
                ImgHref = row.ImgHref,
                Modified = row.Modified,
                Pid = row.Pid,
                Target = row.Target,
            };
        }
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("/");
    }
}